<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pusilkom.base.model.mapper.KomentarMapper">
  <resultMap id="BaseResultMap" type="com.pusilkom.base.model.Komentar">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="id_penelitian" jdbcType="INTEGER" property="idPenelitian" />
    <result column="id_bagian_usulan" jdbcType="INTEGER" property="idBagianUsulan" />
    <result column="komentar" jdbcType="VARCHAR" property="komentar" />
    <result column="timestamp_update" jdbcType="TIMESTAMP" property="timestampUpdate" />
    <result column="id_user" jdbcType="INTEGER" property="idUser" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, id_penelitian, id_bagian_usulan, komentar, timestamp_update, id_user
  </sql>
  <select id="selectByExample" parameterType="com.pusilkom.base.model.KomentarExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from komentar
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 'true' as QUERYID,
    <include refid="Base_Column_List" />
    from komentar
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from komentar
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.pusilkom.base.model.KomentarExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from komentar
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.pusilkom.base.model.Komentar" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into komentar (id_penelitian, id_bagian_usulan, komentar, 
      timestamp_update, id_user)
    values (#{idPenelitian,jdbcType=INTEGER}, #{idBagianUsulan,jdbcType=INTEGER}, #{komentar,jdbcType=VARCHAR}, 
      #{timestampUpdate,jdbcType=TIMESTAMP}, #{idUser,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.pusilkom.base.model.Komentar" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into komentar
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="idPenelitian != null">
        id_penelitian,
      </if>
      <if test="idBagianUsulan != null">
        id_bagian_usulan,
      </if>
      <if test="komentar != null">
        komentar,
      </if>
      <if test="timestampUpdate != null">
        timestamp_update,
      </if>
      <if test="idUser != null">
        id_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="idPenelitian != null">
        #{idPenelitian,jdbcType=INTEGER},
      </if>
      <if test="idBagianUsulan != null">
        #{idBagianUsulan,jdbcType=INTEGER},
      </if>
      <if test="komentar != null">
        #{komentar,jdbcType=VARCHAR},
      </if>
      <if test="timestampUpdate != null">
        #{timestampUpdate,jdbcType=TIMESTAMP},
      </if>
      <if test="idUser != null">
        #{idUser,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pusilkom.base.model.KomentarExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from komentar
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update komentar
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.idPenelitian != null">
        id_penelitian = #{record.idPenelitian,jdbcType=INTEGER},
      </if>
      <if test="record.idBagianUsulan != null">
        id_bagian_usulan = #{record.idBagianUsulan,jdbcType=INTEGER},
      </if>
      <if test="record.komentar != null">
        komentar = #{record.komentar,jdbcType=VARCHAR},
      </if>
      <if test="record.timestampUpdate != null">
        timestamp_update = #{record.timestampUpdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.idUser != null">
        id_user = #{record.idUser,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update komentar
    set id = #{record.id,jdbcType=INTEGER},
      id_penelitian = #{record.idPenelitian,jdbcType=INTEGER},
      id_bagian_usulan = #{record.idBagianUsulan,jdbcType=INTEGER},
      komentar = #{record.komentar,jdbcType=VARCHAR},
      timestamp_update = #{record.timestampUpdate,jdbcType=TIMESTAMP},
      id_user = #{record.idUser,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pusilkom.base.model.Komentar">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update komentar
    <set>
      <if test="idPenelitian != null">
        id_penelitian = #{idPenelitian,jdbcType=INTEGER},
      </if>
      <if test="idBagianUsulan != null">
        id_bagian_usulan = #{idBagianUsulan,jdbcType=INTEGER},
      </if>
      <if test="komentar != null">
        komentar = #{komentar,jdbcType=VARCHAR},
      </if>
      <if test="timestampUpdate != null">
        timestamp_update = #{timestampUpdate,jdbcType=TIMESTAMP},
      </if>
      <if test="idUser != null">
        id_user = #{idUser,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pusilkom.base.model.Komentar">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update komentar
    set id_penelitian = #{idPenelitian,jdbcType=INTEGER},
      id_bagian_usulan = #{idBagianUsulan,jdbcType=INTEGER},
      komentar = #{komentar,jdbcType=VARCHAR},
      timestamp_update = #{timestampUpdate,jdbcType=TIMESTAMP},
      id_user = #{idUser,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>